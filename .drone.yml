---
platform:
  os: linux
  arch: amd64

# Begin
clone:
  git-clone:
    commands: |
      set -ex
      git clone -b ${DRONE_TAG:-$DRONE_BRANCH} $DRONE_REMOTE_URL .
      if [ x$DRONE_PULL_REQUEST != x ]; then
          git fetch origin refs/pull/$DRONE_PULL_REQUEST/head
          EMAIL=ci git merge --no-edit FETCH_HEAD
      fi
      git rev-parse HEAD
    image: "casperlabs/buildenv:latest"

# NOTE: Anchors are per document
# Anchor for default buildenv
__buildenv: &buildenv
  image: "casperlabs/buildenv:latest"
  environment:
    CARGO_HOME: ".cargo"

# Anchor for cache plugin
__cache: &cache
  image: drillster/drone-volume-cache
  volumes:
  - name: cache
    path: /cache
  settings:
    mount:
      - ./target
      - ./.cargo

kind: pipeline
name: cargo

steps:
- name: restore-cache
  <<: *cache
  settings:
    restore: true

- name: cargo-fmt
  <<: *buildenv
  commands:
  - rustup component add rustfmt
  - cargo fmt -- --check

- name: cargo-clippy
  <<: *buildenv
  environment:
    RUSTFLAGS: '-D warnings'
  commands:
  - rustup component add clippy
  - cargo +nightly clippy --all-targets

- name: cargo-test
  <<: *buildenv
  commands:
  - cargo test

- name: test-contracts
  <<: *buildenv
  commands:
  - make setup
  - make test-contracts-rs test-contracts-as

- name: test-contracts
  <<: *buildenv
  commands:
  - make test-contracts-rs


- name: rebuild-cache
  <<: *cache
  settings:
    rebuild: true
  when:
    branch:
    - master
    event:
    - push

volumes:
  - name: cache
    host:
      path: /tmp/cache

trigger:
  branch:
  - master
  - trying
  - staging

---
# Anchor for default buildenv
__buildenv: &buildenv
  image: "casperlabs/buildenv:latest"
  environment:
    CARGO_HOME: ".cargo"

kind: pipeline
name: on-tag

steps:
- name: restore-cache-tag
  image: drillster/drone-volume-cache
  volumes:
  - name: cache
    path: /cache
  settings:
    mount:
      - ./target
      - ./.cargo
    restore: true

- name: build-release-tag
  <<: *buildenv
  commands:
  - "cargo build --release"
  depends_on:
  - restore-cache-tag

- name: build-deb-tag
  <<: *buildenv
  commands:
  - "cargo deb"
  depends_on:
  - build-release-tag

- name: publish-github-tag
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
    - sha256
    - md5
    files:
    - "./target/debian/*.deb"
    prerelease:
    - true
  depends_on:
  - build-deb-tag

- name: publish-crate-tag
  <<: *buildenv
  commands:
  - "echo TODO"
  depends_on:
  - build-release-tag

- name: publish-bintray-tag
  <<: *buildenv
  commands:
  - "echo TODO"
  depends_on:
  - build-deb-tag

volumes:
  - name: cache
    host:
      path: /tmp/cache

trigger:
  ref:
  - refs/tags/v*

---
kind: pipeline
name: failed-build-alert

clone:
  disable: true

steps:
- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    template:
    - |
      casperlabs-node build status: *{{ uppercasefirst build.status }}*
      Author: {{ build.author }}
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
trigger:
  status:
  - failure
  branch:
  - master
  - trying
  - staging

depends_on:
- cargo
